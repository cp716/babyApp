{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport { shape, string } from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { KeyboardSafeView } from \"react-native-web/dist/index\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport firebase from 'firebase';\nimport CircleButton from \"../components/CircleButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar date = new Date();\nvar year = date.getFullYear();\nvar month = date.getMonth() + 1;\nvar day = date.getDate();\nexport default function DetailScreen(props) {\n  var navigation = props.navigation,\n      route = props.route;\n  var _route$params = route.params,\n      id = _route$params.id,\n      bodyText = _route$params.bodyText,\n      timeLeft = _route$params.timeLeft,\n      timeRight = _route$params.timeRight,\n      updatedAt = _route$params.updatedAt;\n  console.log(id);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      setMemo = _useState2[1];\n\n  var _useState3 = useState(bodyText),\n      _useState4 = _slicedToArray(_useState3, 2),\n      body = _useState4[0],\n      setBodyText = _useState4[1];\n\n  var _useState5 = useState((\"00\" + timeLeft).slice(-2)),\n      _useState6 = _slicedToArray(_useState5, 2),\n      left = _useState6[0],\n      setTimeLeft = _useState6[1];\n\n  var _useState7 = useState((\"00\" + timeRight).slice(-2)),\n      _useState8 = _slicedToArray(_useState7, 2),\n      right = _useState8[0],\n      setTimeRight = _useState8[1];\n\n  var _useState9 = useState(updatedAt),\n      _useState10 = _slicedToArray(_useState9, 2),\n      datedAt = _useState10[0],\n      setUpdatedAt = _useState10[1];\n\n  useEffect(function () {\n    var _firebase$auth = firebase.auth(),\n        currentUser = _firebase$auth.currentUser;\n\n    var unsubscribe = function unsubscribe() {};\n\n    if (currentUser) {\n      var db = firebase.firestore();\n      var ref = db.collection(\"users/\" + currentUser.uid + \"/\" + year + \"/\" + month + \"/\" + day).doc(id);\n      unsubscribe = ref.onSnapshot(function (doc) {\n        console.log(doc.id, doc.data());\n        var data = doc.data();\n        setMemo({\n          id: doc.id,\n          timeLeft: data.timeLeft,\n          timeRight: data.timeRight,\n          bodyText: data.bodyText,\n          updatedAt: data.updatedAt.toDate()\n        });\n      });\n    }\n\n    return unsubscribe;\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.Detail,\n      children: [_jsx(TextInput, {\n        value: body,\n        multiline: true,\n        style: styles.input,\n        onChangeText: function onChangeText(text) {\n          setBodyText(text);\n        },\n        autoFocus: true\n      }), _jsx(TextInput, {\n        keyboardType: \"number-pad\",\n        value: left,\n        multiline: true,\n        style: styles.input,\n        onChangeText: function onChangeText(text) {\n          setTimeLeft(text);\n        }\n      }), _jsx(TextInput, {\n        keyboardType: \"number-pad\",\n        value: right,\n        multiline: true,\n        style: styles.input,\n        onChangeText: function onChangeText(text) {\n          setTimeRight(text);\n        }\n      }), _jsx(TextInput, {\n        keyboardType: \"number-pad\",\n        value: datedAt,\n        multiline: true,\n        style: styles.input,\n        onChangeText: function onChangeText(text) {\n          setUpdatedAt(text);\n        }\n      })]\n    }), _jsx(CircleButton, {\n      style: {\n        top: 60,\n        bottom: 'auto'\n      },\n      name: \"check\",\n      onPress: function onPress() {\n        navigation.navigate('Edit');\n      }\n    })]\n  });\n}\nDetailScreen.propTypes = {\n  route: shape({\n    params: shape({\n      id: string\n    })\n  }).isRequired\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#ffffff'\n  },\n  Detail: {\n    backgroundColor: 'red',\n    alignItems: 'center',\n    paddingVertical: 50,\n    paddingHorizontal: 19\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","shape","string","KeyboardSafeView","firebase","CircleButton","date","Date","year","getFullYear","month","getMonth","day","getDate","DetailScreen","props","navigation","route","params","id","bodyText","timeLeft","timeRight","updatedAt","console","log","setMemo","body","setBodyText","slice","left","setTimeLeft","right","setTimeRight","datedAt","setUpdatedAt","auth","currentUser","unsubscribe","db","firestore","ref","collection","uid","doc","onSnapshot","data","toDate","styles","container","Detail","input","text","top","bottom","navigate","propTypes","isRequired","StyleSheet","create","flex","backgroundColor","alignItems","paddingVertical","paddingHorizontal"],"sources":["/Users/atsushi/Dev/baby/src/screens/DetailScreen.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { shape, string } from 'prop-types'\nimport { View, ScrollView, Text, StyleSheet, KeyboardSafeView, TextInput } from 'react-native';\nimport firebase from 'firebase';\n\nimport CircleButton from '../components/CircleButton';\n\nconst date = new Date();\nconst year = date.getFullYear();\nconst month = date.getMonth() + 1;\nconst day = date.getDate();\n\nexport default function DetailScreen(props) {\n    const { navigation, route } = props;\n    const { id, bodyText, timeLeft, timeRight, updatedAt } = route.params;\n    console.log(id);\n    const [, setMemo] = useState(null);\n\n    const [body, setBodyText] = useState(bodyText);\n    const [left, setTimeLeft] = useState((\"00\" + timeLeft ).slice(-2));\n    const [right, setTimeRight] = useState((\"00\" + timeRight ).slice(-2));\n    const [datedAt, setUpdatedAt] = useState(updatedAt);\n\n    useEffect(() => {\n        const { currentUser } = firebase.auth();\n        let unsubscribe = () => {};\n        if (currentUser) {\n            const db = firebase.firestore();\n            const ref = db.collection(`users/${currentUser.uid}/${year}/${month}/${day}`).doc(id);\n            unsubscribe = ref.onSnapshot((doc) => {\n                console.log(doc.id, doc.data());\n                const data = doc.data();\n                setMemo({\n                    id: doc.id,\n                    timeLeft: data.timeLeft,\n                    timeRight: data.timeRight,\n                    bodyText: data.bodyText,\n                    updatedAt: data.updatedAt.toDate(),\n                });\n            });\n        }\n        return unsubscribe;\n    }, []);\n\n\n    return (\n        \n        <View style={styles.container}>\n            \n            <View style={styles.Detail}>\n                <TextInput\n                        //keyboardType=\"number-pad\"\n                        value={body}\n                        multiline\n                        style={styles.input}\n                        onChangeText={(text) => { setBodyText(text); }}\n                        autoFocus\n                />\n                <TextInput\n                        keyboardType=\"number-pad\"\n                        value={left }\n                        multiline\n                        style={styles.input}\n                        onChangeText={(text) => { setTimeLeft(text); }}\n                />\n                <TextInput\n                        keyboardType=\"number-pad\"\n                        value={right}\n                        multiline\n                        style={styles.input}\n                        onChangeText={(text) => { setTimeRight(text); }}\n                />\n                <TextInput\n                        keyboardType=\"number-pad\"\n                        value={datedAt}\n                        multiline\n                        style={styles.input}\n                        onChangeText={(text) => { setUpdatedAt(text); }}\n                />\n            </View>\n            <CircleButton\n                style={{ top: 60, bottom: 'auto'}}\n                name=\"check\"\n                onPress={() => { navigation.navigate('Edit') }}\n            />\n        </View>\n    );\n}\n\nDetailScreen.propTypes = {\n    route: shape({\n        params: shape({ id: string }),\n    }).isRequired,\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#ffffff',\n    },\n    Detail: {\n        backgroundColor: 'red',\n        //justifyContent: 'center',\n        alignItems:'center',\n        paddingVertical: 50,\n        paddingHorizontal: 19,\n    },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}