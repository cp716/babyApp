{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport CircleButton from \"../components/CircleButton\";\nimport KeyboardSafeView from \"../components/KeyboardSafeView\";\nimport firebase from 'firebase';\nimport Test from \"../components/Test\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar date = new Date();\nvar year = date.getFullYear();\nvar month = date.getMonth() + 1;\nvar day = date.getDate();\nexport default function CreateScreen(props) {\n  var navigation = props.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      bodyText = _useState2[0],\n      setBodyText = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      timeLeft = _useState4[0],\n      setTimeLeft = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      timeRight = _useState6[0],\n      setTimeRight = _useState6[1];\n\n  function handlePress() {\n    var db = firebase.firestore();\n\n    var _firebase$auth = firebase.auth(),\n        currentUser = _firebase$auth.currentUser;\n\n    var ref = db.collection(\"users/\" + currentUser.uid + \"/\" + year + \"/\" + month + \"/\" + day);\n    ref.add({\n      timeLeft: timeLeft,\n      timeRight: timeRight,\n      bodyText: bodyText,\n      updatedAt: new Date()\n    }).then(function (docRef) {\n      console.log('書き込みました', docRef.id);\n      navigation.goBack();\n    }).catch(function (error) {\n      console.log('失敗しました', error);\n    });\n  }\n\n  return _jsxs(KeyboardSafeView, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.inputTypeContainer,\n      children: [_jsx(Text, {\n        children: \"\\u5DE6\"\n      }), _jsx(TextInput, {\n        keyboardType: \"number-pad\",\n        value: timeLeft,\n        multiline: true,\n        style: styles.input,\n        onChangeText: function onChangeText(text) {\n          setTimeLeft(text);\n        },\n        autoFocus: true,\n        maxLength: 2\n      }), _jsx(Text, {\n        children: \"\\u5206\"\n      })]\n    }), _jsxs(View, {\n      style: styles.inputTypeContainer,\n      children: [_jsx(Text, {\n        children: \"\\u53F3\"\n      }), _jsx(TextInput, {\n        keyboardType: \"number-pad\",\n        value: timeRight,\n        multiline: true,\n        style: styles.input,\n        onChangeText: function onChangeText(text) {\n          setTimeRight(text);\n        },\n        autoFocus: true,\n        maxLength: 2\n      }), _jsx(Text, {\n        children: \"\\u5206\"\n      })]\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(Text, {\n        children: \"\\u30E1\\u30E2\"\n      }), _jsx(TextInput, {\n        keyboardType: \"web-search\",\n        value: bodyText,\n        multiline: true,\n        style: styles.input,\n        onChangeText: function onChangeText(text) {\n          setBodyText(text);\n        },\n        autoFocus: true\n      })]\n    }), _jsx(Test, {}), _jsx(CircleButton, {\n      name: \"check\",\n      onPress: handlePress\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  inputTypeContainer: {\n    paddingHorizontal: 27,\n    paddingVertical: 10,\n    height: 50,\n    backgroundColor: '#913125',\n    flexDirection: 'row',\n    width: 150\n  },\n  inputContainer: {\n    paddingHorizontal: 27,\n    paddingVertical: 10,\n    height: 150,\n    backgroundColor: '#859602'\n  },\n  input: {\n    flex: 1,\n    textAlignVertical: 'top',\n    fontSize: 16,\n    lineHeight: 24,\n    backgroundColor: '#ffffff'\n  }\n});","map":{"version":3,"names":["React","useState","CircleButton","KeyboardSafeView","firebase","Test","date","Date","year","getFullYear","month","getMonth","day","getDate","CreateScreen","props","navigation","bodyText","setBodyText","timeLeft","setTimeLeft","timeRight","setTimeRight","handlePress","db","firestore","auth","currentUser","ref","collection","uid","add","updatedAt","then","docRef","console","log","id","goBack","catch","error","styles","container","inputTypeContainer","input","text","inputContainer","StyleSheet","create","flex","paddingHorizontal","paddingVertical","height","backgroundColor","flexDirection","width","textAlignVertical","fontSize","lineHeight"],"sources":["/Users/atsushi/Dev/baby/src/screens/CreateScreen.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TextInput, StyleSheet } from 'react-native';\n\nimport CircleButton from '../components/CircleButton';\nimport KeyboardSafeView from '../components/KeyboardSafeView';\nimport firebase from 'firebase';\nimport Test from '../components/Test';\n\nconst date = new Date();\nconst year = date.getFullYear();\nconst month = date.getMonth() + 1;\nconst day = date.getDate();\n  \nexport default function CreateScreen(props) {\n    const { navigation } = props;\n    const [bodyText, setBodyText] = useState('');\n    const [timeLeft,  setTimeLeft] = useState('');\n    const [timeRight,  setTimeRight] = useState('');\n\n    function handlePress() {\n        const db = firebase.firestore();\n        const { currentUser } = firebase.auth();\n        const ref = db.collection(`users/${currentUser.uid}/${year}/${month}/${day}`);\n        ref.add({\n            timeLeft,\n            timeRight,\n            bodyText,\n            updatedAt: new Date(),\n        })\n            .then((docRef) => {\n                console.log('書き込みました', docRef.id);\n                navigation.goBack();\n            })\n            .catch((error) => {\n                console.log('失敗しました', error);\n            });\n    }\n\n    return (\n        <KeyboardSafeView style={styles.container}>\n            <View style={styles.inputTypeContainer}>\n                <Text>左</Text>\n                    <TextInput\n                        keyboardType=\"number-pad\"\n                        value={timeLeft}\n                        multiline\n                        style={styles.input}\n                        onChangeText={(text) => { setTimeLeft(text); }}\n                        autoFocus\n                        maxLength={2}\n                    />\n                <Text>分</Text>\n            </View>\n            <View style={styles.inputTypeContainer}>\n                <Text>右</Text>\n                    <TextInput\n                        keyboardType=\"number-pad\"\n                        value={timeRight}\n                        multiline\n                        style={styles.input}\n                        onChangeText={(text) => { setTimeRight(text); }}\n                        autoFocus\n                        maxLength={2}\n                    />\n                <Text>分</Text>\n            </View>\n            <View style={styles.inputContainer}>\n                <Text>メモ</Text>\n                <TextInput\n                        keyboardType=\"web-search\"\n                        value={bodyText}\n                        multiline\n                        style={styles.input}\n                        onChangeText={(text) => { setBodyText(text); }}\n                        autoFocus\n                />\n            </View>\n            <Test />\n            <CircleButton\n                name=\"check\"\n                onPress={handlePress}\n            />\n        </KeyboardSafeView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    inputTypeContainer: {\n        paddingHorizontal: 27,\n        paddingVertical: 10,\n        height: 50,\n        backgroundColor: '#913125',\n        //flex: 1,\n        flexDirection: 'row',\n        width: 150 ,\n        \n    },\n    inputContainer: {\n        paddingHorizontal: 27,\n        paddingVertical: 10,\n        height: 150,\n        backgroundColor: '#859602'\n        //flex: 1,\n    },\n    input: {\n        flex: 1,\n        textAlignVertical: 'top',\n        fontSize: 16,\n        lineHeight: 24,\n        backgroundColor: '#ffffff'\n    },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}